package cuda

/*
 THIS FILE IS AUTO-GENERATED BY CUDA2GO.
 EDITING IS FUTILE.
*/

import (
	"github.com/mumax/3/cuda/cu"
	"github.com/mumax/3/timer"
	"sync"
	"unsafe"
)

// CUDA handle for evaldt0 kernel
var evaldt0_code cu.Function

// Stores the arguments for evaldt0 kernel invocation
type evaldt0_args_t struct {
	arg_temp_         unsafe.Pointer
	arg_dt0_          unsafe.Pointer
	arg_mx            unsafe.Pointer
	arg_my            unsafe.Pointer
	arg_mz            unsafe.Pointer
	arg_Kth_          unsafe.Pointer
	arg_Kth_mul       float32
	arg_Cth_          unsafe.Pointer
	arg_Cth_mul       float32
	arg_Dth_          unsafe.Pointer
	arg_Dth_mul       float32
	arg_Tsubsth_      unsafe.Pointer
	arg_Tsubsth_mul   float32
	arg_Tausubsth_    unsafe.Pointer
	arg_Tausubsth_mul float32
	arg_res_          unsafe.Pointer
	arg_res_mul       float32
	arg_Qext_         unsafe.Pointer
	arg_Qext_mul      float32
	arg_jx_           unsafe.Pointer
	arg_jx_mul        float32
	arg_jy_           unsafe.Pointer
	arg_jy_mul        float32
	arg_jz_           unsafe.Pointer
	arg_jz_mul        float32
	arg_wx            float32
	arg_wy            float32
	arg_wz            float32
	arg_Nx            int
	arg_Ny            int
	arg_Nz            int
	argptr            [31]unsafe.Pointer
	sync.Mutex
}

// Stores the arguments for evaldt0 kernel invocation
var evaldt0_args evaldt0_args_t

func init() {
	// CUDA driver kernel call wants pointers to arguments, set them up once.
	evaldt0_args.argptr[0] = unsafe.Pointer(&evaldt0_args.arg_temp_)
	evaldt0_args.argptr[1] = unsafe.Pointer(&evaldt0_args.arg_dt0_)
	evaldt0_args.argptr[2] = unsafe.Pointer(&evaldt0_args.arg_mx)
	evaldt0_args.argptr[3] = unsafe.Pointer(&evaldt0_args.arg_my)
	evaldt0_args.argptr[4] = unsafe.Pointer(&evaldt0_args.arg_mz)
	evaldt0_args.argptr[5] = unsafe.Pointer(&evaldt0_args.arg_Kth_)
	evaldt0_args.argptr[6] = unsafe.Pointer(&evaldt0_args.arg_Kth_mul)
	evaldt0_args.argptr[7] = unsafe.Pointer(&evaldt0_args.arg_Cth_)
	evaldt0_args.argptr[8] = unsafe.Pointer(&evaldt0_args.arg_Cth_mul)
	evaldt0_args.argptr[9] = unsafe.Pointer(&evaldt0_args.arg_Dth_)
	evaldt0_args.argptr[10] = unsafe.Pointer(&evaldt0_args.arg_Dth_mul)
	evaldt0_args.argptr[11] = unsafe.Pointer(&evaldt0_args.arg_Tsubsth_)
	evaldt0_args.argptr[12] = unsafe.Pointer(&evaldt0_args.arg_Tsubsth_mul)
	evaldt0_args.argptr[13] = unsafe.Pointer(&evaldt0_args.arg_Tausubsth_)
	evaldt0_args.argptr[14] = unsafe.Pointer(&evaldt0_args.arg_Tausubsth_mul)
	evaldt0_args.argptr[15] = unsafe.Pointer(&evaldt0_args.arg_res_)
	evaldt0_args.argptr[16] = unsafe.Pointer(&evaldt0_args.arg_res_mul)
	evaldt0_args.argptr[17] = unsafe.Pointer(&evaldt0_args.arg_Qext_)
	evaldt0_args.argptr[18] = unsafe.Pointer(&evaldt0_args.arg_Qext_mul)
	evaldt0_args.argptr[19] = unsafe.Pointer(&evaldt0_args.arg_jx_)
	evaldt0_args.argptr[20] = unsafe.Pointer(&evaldt0_args.arg_jx_mul)
	evaldt0_args.argptr[21] = unsafe.Pointer(&evaldt0_args.arg_jy_)
	evaldt0_args.argptr[22] = unsafe.Pointer(&evaldt0_args.arg_jy_mul)
	evaldt0_args.argptr[23] = unsafe.Pointer(&evaldt0_args.arg_jz_)
	evaldt0_args.argptr[24] = unsafe.Pointer(&evaldt0_args.arg_jz_mul)
	evaldt0_args.argptr[25] = unsafe.Pointer(&evaldt0_args.arg_wx)
	evaldt0_args.argptr[26] = unsafe.Pointer(&evaldt0_args.arg_wy)
	evaldt0_args.argptr[27] = unsafe.Pointer(&evaldt0_args.arg_wz)
	evaldt0_args.argptr[28] = unsafe.Pointer(&evaldt0_args.arg_Nx)
	evaldt0_args.argptr[29] = unsafe.Pointer(&evaldt0_args.arg_Ny)
	evaldt0_args.argptr[30] = unsafe.Pointer(&evaldt0_args.arg_Nz)
}

// Wrapper for evaldt0 CUDA kernel, asynchronous.
func k_evaldt0_async(temp_ unsafe.Pointer, dt0_ unsafe.Pointer, mx unsafe.Pointer, my unsafe.Pointer, mz unsafe.Pointer, Kth_ unsafe.Pointer, Kth_mul float32, Cth_ unsafe.Pointer, Cth_mul float32, Dth_ unsafe.Pointer, Dth_mul float32, Tsubsth_ unsafe.Pointer, Tsubsth_mul float32, Tausubsth_ unsafe.Pointer, Tausubsth_mul float32, res_ unsafe.Pointer, res_mul float32, Qext_ unsafe.Pointer, Qext_mul float32, jx_ unsafe.Pointer, jx_mul float32, jy_ unsafe.Pointer, jy_mul float32, jz_ unsafe.Pointer, jz_mul float32, wx float32, wy float32, wz float32, Nx int, Ny int, Nz int, cfg *config) {
	if Synchronous { // debug
		Sync()
		timer.Start("evaldt0")
	}

	evaldt0_args.Lock()
	defer evaldt0_args.Unlock()

	if evaldt0_code == 0 {
		evaldt0_code = fatbinLoad(evaldt0_map, "evaldt0")
	}

	evaldt0_args.arg_temp_ = temp_
	evaldt0_args.arg_dt0_ = dt0_
	evaldt0_args.arg_mx = mx
	evaldt0_args.arg_my = my
	evaldt0_args.arg_mz = mz
	evaldt0_args.arg_Kth_ = Kth_
	evaldt0_args.arg_Kth_mul = Kth_mul
	evaldt0_args.arg_Cth_ = Cth_
	evaldt0_args.arg_Cth_mul = Cth_mul
	evaldt0_args.arg_Dth_ = Dth_
	evaldt0_args.arg_Dth_mul = Dth_mul
	evaldt0_args.arg_Tsubsth_ = Tsubsth_
	evaldt0_args.arg_Tsubsth_mul = Tsubsth_mul
	evaldt0_args.arg_Tausubsth_ = Tausubsth_
	evaldt0_args.arg_Tausubsth_mul = Tausubsth_mul
	evaldt0_args.arg_res_ = res_
	evaldt0_args.arg_res_mul = res_mul
	evaldt0_args.arg_Qext_ = Qext_
	evaldt0_args.arg_Qext_mul = Qext_mul
	evaldt0_args.arg_jx_ = jx_
	evaldt0_args.arg_jx_mul = jx_mul
	evaldt0_args.arg_jy_ = jy_
	evaldt0_args.arg_jy_mul = jy_mul
	evaldt0_args.arg_jz_ = jz_
	evaldt0_args.arg_jz_mul = jz_mul
	evaldt0_args.arg_wx = wx
	evaldt0_args.arg_wy = wy
	evaldt0_args.arg_wz = wz
	evaldt0_args.arg_Nx = Nx
	evaldt0_args.arg_Ny = Ny
	evaldt0_args.arg_Nz = Nz

	args := evaldt0_args.argptr[:]
	cu.LaunchKernel(evaldt0_code, cfg.Grid.X, cfg.Grid.Y, cfg.Grid.Z, cfg.Block.X, cfg.Block.Y, cfg.Block.Z, 0, stream0, args)

	if Synchronous { // debug
		Sync()
		timer.Stop("evaldt0")
	}
}

// maps compute capability on PTX code for evaldt0 kernel.
var evaldt0_map = map[int]string{0: "",
	30: evaldt0_ptx_30}

// evaldt0 PTX code for various compute capabilities.
const (
	evaldt0_ptx_30 = `
.version 6.5
.target sm_30
.address_size 64

	// .globl	evaldt0

.visible .entry evaldt0(
	.param .u64 evaldt0_param_0,
	.param .u64 evaldt0_param_1,
	.param .u64 evaldt0_param_2,
	.param .u64 evaldt0_param_3,
	.param .u64 evaldt0_param_4,
	.param .u64 evaldt0_param_5,
	.param .f32 evaldt0_param_6,
	.param .u64 evaldt0_param_7,
	.param .f32 evaldt0_param_8,
	.param .u64 evaldt0_param_9,
	.param .f32 evaldt0_param_10,
	.param .u64 evaldt0_param_11,
	.param .f32 evaldt0_param_12,
	.param .u64 evaldt0_param_13,
	.param .f32 evaldt0_param_14,
	.param .u64 evaldt0_param_15,
	.param .f32 evaldt0_param_16,
	.param .u64 evaldt0_param_17,
	.param .f32 evaldt0_param_18,
	.param .u64 evaldt0_param_19,
	.param .f32 evaldt0_param_20,
	.param .u64 evaldt0_param_21,
	.param .f32 evaldt0_param_22,
	.param .u64 evaldt0_param_23,
	.param .f32 evaldt0_param_24,
	.param .f32 evaldt0_param_25,
	.param .f32 evaldt0_param_26,
	.param .f32 evaldt0_param_27,
	.param .u32 evaldt0_param_28,
	.param .u32 evaldt0_param_29,
	.param .u32 evaldt0_param_30
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<175>;
	.reg .b32 	%r<379>;
	.reg .b64 	%rd<140>;


	ld.param.u64 	%rd1, [evaldt0_param_0];
	ld.param.u64 	%rd2, [evaldt0_param_1];
	ld.param.u64 	%rd3, [evaldt0_param_2];
	ld.param.u64 	%rd4, [evaldt0_param_3];
	ld.param.u64 	%rd5, [evaldt0_param_4];
	ld.param.u64 	%rd6, [evaldt0_param_5];
	ld.param.u64 	%rd7, [evaldt0_param_7];
	ld.param.u64 	%rd8, [evaldt0_param_9];
	ld.param.u64 	%rd9, [evaldt0_param_11];
	ld.param.u64 	%rd10, [evaldt0_param_13];
	ld.param.u64 	%rd11, [evaldt0_param_15];
	ld.param.u64 	%rd12, [evaldt0_param_17];
	ld.param.f32 	%f168, [evaldt0_param_18];
	ld.param.u64 	%rd13, [evaldt0_param_19];
	ld.param.u64 	%rd14, [evaldt0_param_21];
	ld.param.u64 	%rd15, [evaldt0_param_23];
	ld.param.f32 	%f45, [evaldt0_param_25];
	ld.param.f32 	%f46, [evaldt0_param_26];
	ld.param.f32 	%f47, [evaldt0_param_27];
	ld.param.u32 	%r12, [evaldt0_param_28];
	ld.param.u32 	%r13, [evaldt0_param_29];
	ld.param.u32 	%r14, [evaldt0_param_30];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	mov.u32 	%r18, %ntid.y;
	mov.u32 	%r19, %ctaid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	mov.u32 	%r21, %ntid.z;
	mov.u32 	%r22, %ctaid.z;
	mov.u32 	%r23, %tid.z;
	mad.lo.s32 	%r3, %r21, %r22, %r23;
	setp.ge.s32	%p1, %r2, %r13;
	setp.ge.s32	%p2, %r1, %r12;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r14;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB0_43;

	cvta.to.global.u64 	%rd16, %rd2;
	mad.lo.s32 	%r24, %r3, %r13, %r2;
	mad.lo.s32 	%r25, %r24, %r12, %r1;
	cvta.to.global.u64 	%rd17, %rd3;
	mul.wide.s32 	%rd18, %r25, 4;
	add.s64 	%rd19, %rd17, %rd18;
	cvta.to.global.u64 	%rd20, %rd4;
	add.s64 	%rd21, %rd20, %rd18;
	cvta.to.global.u64 	%rd22, %rd5;
	add.s64 	%rd23, %rd22, %rd18;
	ld.global.f32 	%f48, [%rd19];
	ld.global.f32 	%f49, [%rd21];
	mul.f32 	%f50, %f49, %f49;
	fma.rn.f32 	%f51, %f48, %f48, %f50;
	ld.global.f32 	%f52, [%rd23];
	fma.rn.f32 	%f53, %f52, %f52, %f51;
	add.s64 	%rd24, %rd16, %rd18;
	mov.u32 	%r26, 0;
	st.global.u32 	[%rd24], %r26;
	setp.eq.f32	%p6, %f53, 0f00000000;
	@%p6 bra 	BB0_43;

	ld.param.f32 	%f159, [evaldt0_param_20];
	setp.eq.s64	%p7, %rd13, 0;
	@%p7 bra 	BB0_4;

	ld.param.f32 	%f142, [evaldt0_param_20];
	cvta.to.global.u64 	%rd25, %rd13;
	add.s64 	%rd27, %rd25, %rd18;
	ld.global.f32 	%f54, [%rd27];
	mul.f32 	%f159, %f54, %f142;

BB0_4:
	ld.param.f32 	%f160, [evaldt0_param_22];
	setp.eq.s64	%p8, %rd14, 0;
	@%p8 bra 	BB0_6;

	ld.param.f32 	%f144, [evaldt0_param_22];
	cvta.to.global.u64 	%rd28, %rd14;
	add.s64 	%rd30, %rd28, %rd18;
	ld.global.f32 	%f55, [%rd30];
	mul.f32 	%f160, %f55, %f144;

BB0_6:
	ld.param.f32 	%f161, [evaldt0_param_24];
	setp.eq.s64	%p9, %rd15, 0;
	@%p9 bra 	BB0_8;

	ld.param.f32 	%f146, [evaldt0_param_24];
	cvta.to.global.u64 	%rd31, %rd15;
	add.s64 	%rd33, %rd31, %rd18;
	ld.global.f32 	%f56, [%rd33];
	mul.f32 	%f161, %f56, %f146;

BB0_8:
	ld.param.f32 	%f8, [evaldt0_param_6];
	setp.eq.s64	%p10, %rd6, 0;
	@%p10 bra 	BB0_10;

	ld.param.f32 	%f148, [evaldt0_param_6];
	cvta.to.global.u64 	%rd34, %rd6;
	add.s64 	%rd36, %rd34, %rd18;
	ld.global.f32 	%f57, [%rd36];
	mul.f32 	%f8, %f57, %f148;

BB0_10:
	ld.param.f32 	%f163, [evaldt0_param_8];
	setp.eq.s64	%p11, %rd7, 0;
	@%p11 bra 	BB0_12;

	ld.param.f32 	%f150, [evaldt0_param_8];
	cvta.to.global.u64 	%rd37, %rd7;
	add.s64 	%rd39, %rd37, %rd18;
	ld.global.f32 	%f58, [%rd39];
	mul.f32 	%f163, %f58, %f150;

BB0_12:
	ld.param.f32 	%f164, [evaldt0_param_10];
	setp.eq.s64	%p12, %rd8, 0;
	@%p12 bra 	BB0_14;

	ld.param.f32 	%f152, [evaldt0_param_10];
	cvta.to.global.u64 	%rd40, %rd8;
	add.s64 	%rd42, %rd40, %rd18;
	ld.global.f32 	%f59, [%rd42];
	mul.f32 	%f164, %f59, %f152;

BB0_14:
	ld.param.f32 	%f165, [evaldt0_param_12];
	setp.eq.s64	%p13, %rd9, 0;
	@%p13 bra 	BB0_16;

	ld.param.f32 	%f154, [evaldt0_param_12];
	cvta.to.global.u64 	%rd43, %rd9;
	add.s64 	%rd45, %rd43, %rd18;
	ld.global.f32 	%f60, [%rd45];
	mul.f32 	%f165, %f60, %f154;

BB0_16:
	ld.param.f32 	%f166, [evaldt0_param_14];
	setp.eq.s64	%p14, %rd10, 0;
	@%p14 bra 	BB0_18;

	ld.param.f32 	%f156, [evaldt0_param_14];
	cvta.to.global.u64 	%rd46, %rd10;
	add.s64 	%rd48, %rd46, %rd18;
	ld.global.f32 	%f61, [%rd48];
	mul.f32 	%f166, %f61, %f156;

BB0_18:
	ld.param.f32 	%f167, [evaldt0_param_16];
	setp.eq.s64	%p15, %rd11, 0;
	@%p15 bra 	BB0_20;

	ld.param.f32 	%f158, [evaldt0_param_16];
	cvta.to.global.u64 	%rd49, %rd11;
	add.s64 	%rd51, %rd49, %rd18;
	ld.global.f32 	%f62, [%rd51];
	mul.f32 	%f167, %f62, %f158;

BB0_20:
	setp.eq.s64	%p16, %rd12, 0;
	@%p16 bra 	BB0_22;

	cvta.to.global.u64 	%rd52, %rd12;
	add.s64 	%rd54, %rd52, %rd18;
	ld.global.f32 	%f63, [%rd54];
	mul.f32 	%f168, %f63, %f168;

BB0_22:
	cvta.to.global.u64 	%rd55, %rd1;
	add.s64 	%rd57, %rd55, %rd18;
	ld.global.f32 	%f21, [%rd57];
	add.s32 	%r181, %r1, -1;
	mov.f32 	%f170, 0f00000000;
	setp.lt.s32	%p17, %r181, 0;
	@%p17 bra 	BB0_25;

	ld.global.f32 	%f66, [%rd19+-4];
	ld.global.f32 	%f67, [%rd21+-4];
	mul.f32 	%f68, %f67, %f67;
	fma.rn.f32 	%f69, %f66, %f66, %f68;
	ld.global.f32 	%f70, [%rd23+-4];
	fma.rn.f32 	%f71, %f70, %f70, %f69;
	setp.eq.f32	%p18, %f71, 0f00000000;
	@%p18 bra 	BB0_25;

	ld.global.f32 	%f72, [%rd57+-4];
	sub.f32 	%f73, %f72, %f21;
	mul.f32 	%f74, %f8, %f73;
	div.rn.f32 	%f75, %f74, %f45;
	div.rn.f32 	%f76, %f75, %f45;
	add.f32 	%f170, %f76, 0f00000000;
	st.global.f32 	[%rd24], %f170;

BB0_25:
	add.s32 	%r214, %r1, 1;
	setp.ge.s32	%p19, %r214, %r12;
	@%p19 bra 	BB0_28;

	ld.global.f32 	%f77, [%rd19+4];
	ld.global.f32 	%f78, [%rd21+4];
	mul.f32 	%f79, %f78, %f78;
	fma.rn.f32 	%f80, %f77, %f77, %f79;
	ld.global.f32 	%f81, [%rd23+4];
	fma.rn.f32 	%f82, %f81, %f81, %f80;
	setp.eq.f32	%p20, %f82, 0f00000000;
	@%p20 bra 	BB0_28;

	ld.global.f32 	%f83, [%rd57+4];
	sub.f32 	%f84, %f83, %f21;
	mul.f32 	%f85, %f8, %f84;
	div.rn.f32 	%f86, %f85, %f45;
	div.rn.f32 	%f87, %f86, %f45;
	add.f32 	%f170, %f87, %f170;
	st.global.f32 	[%rd24], %f170;

BB0_28:
	add.s32 	%r4, %r2, -1;
	setp.lt.s32	%p21, %r4, 0;
	@%p21 bra 	BB0_31;

	mad.lo.s32 	%r251, %r3, %r13, %r4;
	mad.lo.s32 	%r5, %r251, %r12, %r1;
	mul.wide.s32 	%rd83, %r5, 4;
	add.s64 	%rd84, %rd17, %rd83;
	add.s64 	%rd86, %rd20, %rd83;
	add.s64 	%rd88, %rd22, %rd83;
	ld.global.f32 	%f88, [%rd84];
	ld.global.f32 	%f89, [%rd86];
	mul.f32 	%f90, %f89, %f89;
	fma.rn.f32 	%f91, %f88, %f88, %f90;
	ld.global.f32 	%f92, [%rd88];
	fma.rn.f32 	%f93, %f92, %f92, %f91;
	setp.eq.f32	%p22, %f93, 0f00000000;
	@%p22 bra 	BB0_31;

	add.s64 	%rd91, %rd55, %rd83;
	ld.global.f32 	%f94, [%rd91];
	sub.f32 	%f95, %f94, %f21;
	mul.f32 	%f96, %f8, %f95;
	div.rn.f32 	%f97, %f96, %f46;
	div.rn.f32 	%f98, %f97, %f46;
	add.f32 	%f170, %f98, %f170;
	st.global.f32 	[%rd24], %f170;

BB0_31:
	add.s32 	%r6, %r2, 1;
	setp.ge.s32	%p23, %r6, %r13;
	@%p23 bra 	BB0_34;

	mad.lo.s32 	%r278, %r3, %r13, %r6;
	mad.lo.s32 	%r7, %r278, %r12, %r1;
	mul.wide.s32 	%rd96, %r7, 4;
	add.s64 	%rd97, %rd17, %rd96;
	add.s64 	%rd99, %rd20, %rd96;
	add.s64 	%rd101, %rd22, %rd96;
	ld.global.f32 	%f99, [%rd97];
	ld.global.f32 	%f100, [%rd99];
	mul.f32 	%f101, %f100, %f100;
	fma.rn.f32 	%f102, %f99, %f99, %f101;
	ld.global.f32 	%f103, [%rd101];
	fma.rn.f32 	%f104, %f103, %f103, %f102;
	setp.eq.f32	%p24, %f104, 0f00000000;
	@%p24 bra 	BB0_34;

	add.s64 	%rd104, %rd55, %rd96;
	ld.global.f32 	%f105, [%rd104];
	sub.f32 	%f106, %f105, %f21;
	mul.f32 	%f107, %f8, %f106;
	div.rn.f32 	%f108, %f107, %f46;
	div.rn.f32 	%f109, %f108, %f46;
	add.f32 	%f170, %f109, %f170;
	st.global.f32 	[%rd24], %f170;

BB0_34:
	setp.eq.s32	%p25, %r14, 1;
	@%p25 bra 	BB0_41;

	add.s32 	%r8, %r3, -1;
	setp.lt.s32	%p26, %r8, 0;
	@%p26 bra 	BB0_38;

	mad.lo.s32 	%r305, %r8, %r13, %r2;
	mad.lo.s32 	%r9, %r305, %r12, %r1;
	mul.wide.s32 	%rd109, %r9, 4;
	add.s64 	%rd110, %rd17, %rd109;
	add.s64 	%rd112, %rd20, %rd109;
	add.s64 	%rd114, %rd22, %rd109;
	ld.global.f32 	%f110, [%rd110];
	ld.global.f32 	%f111, [%rd112];
	mul.f32 	%f112, %f111, %f111;
	fma.rn.f32 	%f113, %f110, %f110, %f112;
	ld.global.f32 	%f114, [%rd114];
	fma.rn.f32 	%f115, %f114, %f114, %f113;
	setp.eq.f32	%p27, %f115, 0f00000000;
	@%p27 bra 	BB0_38;

	add.s64 	%rd117, %rd55, %rd109;
	ld.global.f32 	%f116, [%rd117];
	sub.f32 	%f117, %f116, %f21;
	mul.f32 	%f118, %f8, %f117;
	div.rn.f32 	%f119, %f118, %f47;
	div.rn.f32 	%f120, %f119, %f47;
	add.f32 	%f170, %f120, %f170;
	st.global.f32 	[%rd24], %f170;

BB0_38:
	add.s32 	%r10, %r3, 1;
	setp.ge.s32	%p28, %r10, %r14;
	@%p28 bra 	BB0_41;

	mad.lo.s32 	%r332, %r10, %r13, %r2;
	mad.lo.s32 	%r11, %r332, %r12, %r1;
	mul.wide.s32 	%rd122, %r11, 4;
	add.s64 	%rd123, %rd17, %rd122;
	add.s64 	%rd125, %rd20, %rd122;
	add.s64 	%rd127, %rd22, %rd122;
	ld.global.f32 	%f121, [%rd123];
	ld.global.f32 	%f122, [%rd125];
	mul.f32 	%f123, %f122, %f122;
	fma.rn.f32 	%f124, %f121, %f121, %f123;
	ld.global.f32 	%f125, [%rd127];
	fma.rn.f32 	%f126, %f125, %f125, %f124;
	setp.eq.f32	%p29, %f126, 0f00000000;
	@%p29 bra 	BB0_41;

	add.s64 	%rd130, %rd55, %rd122;
	ld.global.f32 	%f127, [%rd130];
	sub.f32 	%f128, %f127, %f21;
	mul.f32 	%f129, %f8, %f128;
	div.rn.f32 	%f130, %f129, %f47;
	div.rn.f32 	%f131, %f130, %f47;
	add.f32 	%f170, %f131, %f170;
	st.global.f32 	[%rd24], %f170;

BB0_41:
	mul.f32 	%f132, %f160, %f160;
	fma.rn.f32 	%f133, %f159, %f159, %f132;
	fma.rn.f32 	%f134, %f161, %f161, %f133;
	fma.rn.f32 	%f135, %f134, %f167, %f170;
	add.f32 	%f136, %f168, %f135;
	mul.f32 	%f137, %f163, %f164;
	div.rn.f32 	%f34, %f136, %f137;
	st.global.f32 	[%rd24], %f34;
	setp.eq.f32	%p30, %f166, 0f00000000;
	@%p30 bra 	BB0_43;

	sub.f32 	%f138, %f21, %f165;
	div.rn.f32 	%f139, %f138, %f166;
	sub.f32 	%f140, %f34, %f139;
	st.global.f32 	[%rd24], %f140;

BB0_43:
	ret;
}


`
)
